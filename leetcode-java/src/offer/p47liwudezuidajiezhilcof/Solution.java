package offer.p47liwudezuidajiezhilcof;

import java.util.Arrays;

/**
 * 剑指 Offer 47. 礼物的最大价值
 *
 * https://leetcode-cn.com/problems/li-wu-de-zui-da-jie-zhi-lcof/
 *
 * 在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。
 * 你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。
 * 给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？
 */

public class Solution {

    public int maxValue(int[][] grid) {
        int m = grid.length, n = grid[0].length;
        int[][] dp = new int[m + 1][n + 1];
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + grid[i - 1][j - 1];
            }
        }
        System.out.println(Arrays.deepToString(dp));
        return dp[m][n];
    }

    public static void main(String[] args) {
        assert new Solution().maxValue(new int[][]{
            {3,8,6,0,5,9,9,6,3,4,0,5,7,3,9,3},
            {0,9,2,5,5,4,9,1,4,6,9,5,6,7,3,2},
            {8,2,2,3,3,3,1,6,9,1,1,6,6,2,1,9},
            {1,3,6,9,9,5,0,3,4,9,1,0,9,6,2,7},
            {8,6,2,2,1,3,0,0,7,2,7,5,4,8,4,8},
            {4,1,9,5,8,9,9,2,0,2,5,1,8,7,0,9},
            {6,2,1,7,8,1,8,5,5,7,0,2,5,7,2,1},
            {8,1,7,6,2,8,1,2,2,6,4,0,5,4,1,3},
            {9,2,1,7,6,1,4,3,8,6,5,5,3,9,7,3},
            {0,6,0,2,4,3,7,6,1,3,8,6,9,0,0,8},
            {4,3,7,2,4,3,6,4,0,3,9,5,3,6,9,3},
            {2,1,8,8,4,5,6,5,8,7,3,7,7,5,8,3},
            {0,7,6,6,1,2,0,3,5,0,8,0,8,7,4,3},
            {0,4,3,4,9,0,1,9,7,7,8,6,4,6,9,5},
            {6,5,1,9,9,2,2,7,4,2,7,2,2,3,7,2},
            {7,1,9,6,1,2,7,0,9,6,6,4,4,5,1,0},
            {3,4,9,2,8,3,1,2,6,9,7,0,2,4,2,0},
            {5,1,8,8,4,6,8,5,2,4,1,6,2,2,9,7}
        }) == 210;

        assert new Solution().maxValue(new int[][]{
            {1,3,1},
            {1,5,1},
            {4,2,1}
        }) == 12;
    }

}
